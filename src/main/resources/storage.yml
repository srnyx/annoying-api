# This file controls the storage of different data for entities (players, mobs, etc...)
# This may not be for ALL data! As this is only for SIMPLE ENTITY data, not anything else

# The method that data will be stored. Available options are listed below
#
# LOCAL (data will be stored on the Minecraft server, connection configuration NOT required)
# - h2 (default)
# - sqlite
#
# REMOTE (data will be stored on a remote database, connection configuration REQUIRED)
# - mysql
# - mariadb
# - postgresql
method: h2

# The connection configuration for REMOTE databases
# NOTE: If you are using a LOCAL database, you can ignore this section
remote-connection:
  # The host of the database
  host: localhost
  # The port of the database
  # Defaults: 3306 for MySQL/MariaDB, 5432 for PostgreSQL
  #port: 3306

  # The name of the database (must already exist)
  database: minecraft

  # The username and password of the database
  username: admin
  password: ''

  # If you're using one database for multiple plugins, it's recommended to have a table prefix
  # By default (if left commented out), the table prefix will be the name of the plugin (special characters and spaces removed, all lowercase) followed by an underscore
  # To remove the table prefix, set it to an empty string ('')
  #table-prefix: 'annoying_'

# Options for the data cache, which is used for both LOCAL and REMOTE storage methods
# The cache greatly improved performance by storing data in memory
# However, there is a potential risk of data loss if the server crashes before the data is saved to the database
cache:
  # Whether to enable using the cache
  enabled: true
  # The actions that will trigger the cache to save to the database (RELOAD, DISABLE, INTERVAL)
  # If empty, all actions will trigger the cache to save
  save-on:
    - RELOAD # Save when the plugin (not the server) is reloaded (recommended)
    - DISABLE # Save when the plugin is disabled (highly recommended)
    - INTERVAL # Save every X ticks (see 'interval' below, recommended)
  # The interval in which the cache will save to the database (only applicable if 'INTERVAL' is in 'save-on')
  interval: 6000 # ticks (1 tick = 1/20th of a second)
